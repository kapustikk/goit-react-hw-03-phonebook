{"version":3,"sources":["components/Phonebook/phonebook.module.css","components/Phonebook/ContactForm.js","components/Phonebook/ContactList.js","components/Phonebook/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChangeName","e","setState","currentTarget","value","handleChangeNumber","handleSubmit","preventDefault","contactMatch","props","onSubmit","contacts","nameMatch","reduce","acc","contact","numberMatch","includes","alert","this","className","s","form","label","type","onChange","input","button","Component","ContactList","onDeleteContact","contactList","map","id","allContacts","onClick","Filter","App","filter","addContact","shortid","generate","prev","deleteContact","contactId","changeFilter","getFilteredContacts","normalizedFilter","toLowerCase","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecdc193b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"phonebook_form__27Ejm\",\"label\":\"phonebook_label__1Ly1f\",\"input\":\"phonebook_input__3C8ro\",\"button\":\"phonebook_button__36sd-\",\"contactList\":\"phonebook_contactList__1Qu9P\",\"allContacts\":\"phonebook_allContacts__2lVLL\"};","import React, { Component } from 'react';\nimport s from './phonebook.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChangeName = e => {\n    this.setState({ name: e.currentTarget.value });\n  };\n\n  handleChangeNumber = e => {\n    this.setState({ number: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    const { name, number } = this.state;\n    e.preventDefault();\n\n    this.setState({ name: '', number: '' });\n    if (this.contactMatch()) {\n      return;\n    }\n    this.props.onSubmit(name, number);\n  };\n\n  contactMatch = () => {\n    const { name, number } = this.state;\n    const { contacts } = this.props;\n    const nameMatch = contacts.reduce(\n      (acc, contact) => [...acc, contact.name],\n      [],\n    );\n    const numberMatch = contacts.reduce(\n      (acc, contact) => [...acc, contact.number],\n      [],\n    );\n    if (nameMatch.includes(name) || numberMatch.includes(number)) {\n      alert(`${name} is already in contacts`);\n      return true;\n    }\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChangeName}\n            className={s.input}\n          ></input>\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChangeNumber}\n            className={s.input}\n          ></input>\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './phonebook.module.css';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.allContacts}>\n          <p>\n            {name}: {number}\n          </p>\n          <button onClick={() => onDeleteContact(id)}>Delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import React from 'react';\nimport s from './phonebook.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <form className={s.form}>\n    <label className={s.label}>\n      Find contact by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        className={s.input}\n      />\n    </label>\n  </form>\n);\nexport default Filter;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\n// import phonebook from './components/phonebook.json';\nimport ContactForm from './components/Phonebook/ContactForm';\nimport ContactList from './components/Phonebook/ContactList';\nimport Filter from './components/Phonebook/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(prev => ({\n      contacts: [contact, ...prev.contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n  \n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n   }\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <>\n        <div>\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={this.addContact} contacts={contacts} />\n\n          <h2>Contacts</h2>\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactList\n            contacts={filteredContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}